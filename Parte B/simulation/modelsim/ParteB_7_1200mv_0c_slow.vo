// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/05/2024 22:43:29"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module restador (
	A,
	B,
	Bin,
	clk,
	Bout,
	dif);
input 	A;
input 	B;
input 	Bin;
input 	clk;
output 	Bout;
output 	dif;

// Design Ports Information
// Bout	=>  Location: PIN_G3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dif	=>  Location: PIN_H3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_G4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Bin	=>  Location: PIN_H4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ParteB_7_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \Bout~output_o ;
wire \dif~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \Bin~input_o ;
wire \D3|Q~feeder_combout ;
wire \D3|Q~q ;
wire \B~input_o ;
wire \D2|Q~feeder_combout ;
wire \D2|Q~q ;
wire \A~input_o ;
wire \D1|Q~feeder_combout ;
wire \D1|Q~q ;
wire \Bout_int~combout ;
wire \D4|Q~q ;
wire \dif_int~combout ;
wire \D5|Q~q ;


// Location: IOOBUF_X0_Y63_N23
cycloneiii_io_obuf \Bout~output (
	.i(\D4|Q~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Bout~output_o ),
	.obar());
// synopsys translate_off
defparam \Bout~output .bus_hold = "false";
defparam \Bout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y62_N23
cycloneiii_io_obuf \dif~output (
	.i(\D5|Q~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dif~output_o ),
	.obar());
// synopsys translate_off
defparam \dif~output .bus_hold = "false";
defparam \dif~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N1
cycloneiii_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneiii_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y62_N15
cycloneiii_io_ibuf \Bin~input (
	.i(Bin),
	.ibar(gnd),
	.o(\Bin~input_o ));
// synopsys translate_off
defparam \Bin~input .bus_hold = "false";
defparam \Bin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N2
cycloneiii_lcell_comb \D3|Q~feeder (
// Equation(s):
// \D3|Q~feeder_combout  = \Bin~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\Bin~input_o ),
	.cin(gnd),
	.combout(\D3|Q~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \D3|Q~feeder .lut_mask = 16'hFF00;
defparam \D3|Q~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N3
dffeas \D3|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\D3|Q~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D3|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D3|Q .is_wysiwyg = "true";
defparam \D3|Q .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y63_N15
cycloneiii_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N8
cycloneiii_lcell_comb \D2|Q~feeder (
// Equation(s):
// \D2|Q~feeder_combout  = \B~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\D2|Q~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \D2|Q~feeder .lut_mask = 16'hFF00;
defparam \D2|Q~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N9
dffeas \D2|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\D2|Q~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D2|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D2|Q .is_wysiwyg = "true";
defparam \D2|Q .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y61_N22
cycloneiii_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N4
cycloneiii_lcell_comb \D1|Q~feeder (
// Equation(s):
// \D1|Q~feeder_combout  = \A~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\A~input_o ),
	.cin(gnd),
	.combout(\D1|Q~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \D1|Q~feeder .lut_mask = 16'hFF00;
defparam \D1|Q~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N5
dffeas \D1|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\D1|Q~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D1|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D1|Q .is_wysiwyg = "true";
defparam \D1|Q .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N24
cycloneiii_lcell_comb Bout_int(
// Equation(s):
// \Bout_int~combout  = (\D3|Q~q  & ((\D2|Q~q ) # (!\D1|Q~q ))) # (!\D3|Q~q  & (\D2|Q~q  & !\D1|Q~q ))

	.dataa(gnd),
	.datab(\D3|Q~q ),
	.datac(\D2|Q~q ),
	.datad(\D1|Q~q ),
	.cin(gnd),
	.combout(\Bout_int~combout ),
	.cout());
// synopsys translate_off
defparam Bout_int.lut_mask = 16'hC0FC;
defparam Bout_int.sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N25
dffeas \D4|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Bout_int~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D4|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D4|Q .is_wysiwyg = "true";
defparam \D4|Q .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N30
cycloneiii_lcell_comb dif_int(
// Equation(s):
// \dif_int~combout  = \D1|Q~q  $ (\D2|Q~q  $ (\D3|Q~q ))

	.dataa(gnd),
	.datab(\D1|Q~q ),
	.datac(\D2|Q~q ),
	.datad(\D3|Q~q ),
	.cin(gnd),
	.combout(\dif_int~combout ),
	.cout());
// synopsys translate_off
defparam dif_int.lut_mask = 16'hC33C;
defparam dif_int.sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N31
dffeas \D5|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\dif_int~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D5|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D5|Q .is_wysiwyg = "true";
defparam \D5|Q .power_up = "low";
// synopsys translate_on

assign Bout = \Bout~output_o ;

assign dif = \dif~output_o ;

endmodule
